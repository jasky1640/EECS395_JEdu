JUnit team initial workflow set up and useful command. 

Find the folder where all plugin jar files located. 
In Mac, it can be accessed by Go->(hold option key)Library->jEdit->jars. 
In Windows, it's in (Jiaqi where is it in Windows?). 

For JUnitPlugin, we already have the original source code and jar files, credit to 2001, 2002 Andre Kaplan, 2006 Denis Koryavov, and many other developers who contributed to JUnit plugin. 

What we need to do, is to modify source code or UI components, compile and build, reorganize the output files into correct structure, and rebuild jar file. Then, drag the newly built jar file to Jedit Library to test our result. 

1. Modify source code or add any files in JUnitPlugin. 

2. Compile all modified files using IntelliJ build. 

3. In the output folder with all the .class files, reorganize the files into correct structure. Add docs, index.html, etc. Everything needs to be matched with the extracted jar folder of the original JUnitPlugin. (This is painful since we need to do this every time we change something, not friendly with debugging. We might need to restructure the JUnitPlugin folder so that the output folder can be used directly.)

4. cd to the organized folder. Run jar cvf JUnitPlugin.jar *

5. JUnitPlugin.jar will appear under the organized folder. Move it to Jedit Library (Delete the old JUnitPlugin.jar). 

6. Restart (or probably not need to) JEdit and reload JUnit plugin. 

7. Your change may be verified. 